{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///wpcom.js","webpack:///webpack/bootstrap 41e2087e1f8266bcbb99","webpack:///./wpcom.js","webpack:///external \"debug\"","webpack:///./lib/comment.js","webpack:///./lib/util/send-request.js","webpack:///./lib/batch.js","webpack:///./lib/category.js","webpack:///./lib/commentlike.js","webpack:///./lib/follow.js","webpack:///./lib/like.js","webpack:///./lib/me.js","webpack:///./lib/media.js","webpack:///./lib/post.js","webpack:///./lib/reblog.js","webpack:///./lib/site.js","webpack:///./lib/tag.js","webpack:///./lib/users.js","webpack:///./lib/util/request.js","webpack:///external \"fs\"","webpack:///external \"qs\"","webpack:///external \"wpcom-xhr-request\""],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_1__","__WEBPACK_EXTERNAL_MODULE_17__","__WEBPACK_EXTERNAL_MODULE_18__","__WEBPACK_EXTERNAL_MODULE_19__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","WPCOM","token","reqHandler","debug","substring","request","params","fn","authToken","request_handler","req","Req","apiVersion","Me","Site","Users","Batch","sendRequest","DEFAULT_ASYNC_TIMEOUT","prototype","me","site","users","batch","freshlyPressed","query","get","body","msg","console","warn","log","Promise","callback","_len","arguments","length","Array","_key","resolve","reject","apply","concat","error","data","timeout","_this","delay","undefined","cancelTimeout","timer","setTimeout","Error","clearTimeout","race","then","Comment","cid","pid","sid","wpcom","_cid","_pid","_sid","CommentLike","path","replies","add","content","post","update","put","reply","del","like","likesList","qs","debug_res","method","toUpperCase","proxyOrigin","stringify","arrayFormat","err","res","urls","url","push","run","Category","slug","_slug","mine","state","Follow","site_id","follow","unfollow","Like","sites","likes","groups","connections","Media","_id","fs","addFiles","files","formData","isArray","i","f","isStream","isFile","k","param","createReadStream","_readableState","File","file","addUrls","media","media_urls","attrs","Post","Reblog","getBySlug","ID","restore","related","reblog","comment","comments","destination_site_id","to","dest","note","encodeURIComponent","list","subpath","listMethod","_publicAPI","Tag","resources","isarr","name","addPost","deletePost","addMediaFiles","addMediaUrls","deleteMedia","cat","category","tag","renderShortcode","TypeError","shortcode","renderEmbed","embed_url","statsReferrersSpamNew","domain","statsReferrersSpamDelete","statsVideo","videoId","statsPostViews","postId","suggest"],"mappings":"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","file":"wpcom.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"debug\"), require(\"fs\"), require(\"qs\"), require(\"wpcom-xhr-request\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"debug\", \"fs\", \"qs\", \"wpcom-xhr-request\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WPCOM\"] = factory(require(\"debug\"), require(\"fs\"), require(\"qs\"), require(\"wpcom-xhr-request\"));\n\telse\n\t\troot[\"WPCOM\"] = factory(root[\"debug\"], root[\"fs\"], root[\"qs\"], root[\"wpcom-xhr-request\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_17__, __WEBPACK_EXTERNAL_MODULE_18__, __WEBPACK_EXTERNAL_MODULE_19__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"debug\"), require(\"fs\"), require(\"qs\"), require(\"wpcom-xhr-request\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"debug\", \"fs\", \"qs\", \"wpcom-xhr-request\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WPCOM\"] = factory(require(\"debug\"), require(\"fs\"), require(\"qs\"), require(\"wpcom-xhr-request\"));\n\telse\n\t\troot[\"WPCOM\"] = factory(root[\"debug\"], root[\"fs\"], root[\"qs\"], root[\"wpcom-xhr-request\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_17__, __WEBPACK_EXTERNAL_MODULE_18__, __WEBPACK_EXTERNAL_MODULE_19__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar request_handler = __webpack_require__(19);\n\t\n\t/**\n\t * Local module dependencies.\n\t */\n\t\n\tvar Me = __webpack_require__(9);\n\tvar Site = __webpack_require__(13);\n\tvar Users = __webpack_require__(15);\n\tvar Batch = __webpack_require__(4);\n\tvar Req = __webpack_require__(16);\n\tvar sendRequest = __webpack_require__(3);\n\tvar debug = __webpack_require__(1)('wpcom');\n\t\n\t/**\n\t * Local module constants\n\t */\n\tvar DEFAULT_ASYNC_TIMEOUT = 30000;\n\t\n\t/**\n\t * XMLHttpRequest (and CORS) API access method.\n\t *\n\t * API authentication is done via an (optional) access `token`,\n\t * which needs to be retrieved via OAuth.\n\t *\n\t * Request Handler is optional and XHR is defined as default.\n\t *\n\t * @param {String} [token] - OAuth API access token\n\t * @param {Function} [reqHandler] - function Request Handler\n\t * @public\n\t */\n\t\n\tfunction WPCOM(token, reqHandler) {\n\t  if (!(this instanceof WPCOM)) {\n\t    return new WPCOM(token, reqHandler);\n\t  }\n\t\n\t  // `token` is optional\n\t  if ('function' === typeof token) {\n\t    reqHandler = token;\n\t    token = null;\n\t  }\n\t\n\t  if (token) {\n\t    debug('Token defined: %s…', token.substring(0, 6));\n\t    this.token = token;\n\t  }\n\t\n\t  // Set default request handler\n\t  if (!reqHandler) {\n\t    debug('No request handler. Adding default XHR request handler');\n\t\n\t    this.request = function (params, fn) {\n\t      params = params || {};\n\t\n\t      // token is optional\n\t      if (token) {\n\t        params.authToken = token;\n\t      }\n\t\n\t      return request_handler(params, fn);\n\t    };\n\t  } else {\n\t    this.request = reqHandler;\n\t  }\n\t\n\t  // Add Req instance\n\t  this.req = new Req(this);\n\t\n\t  // Default api version;\n\t  this.apiVersion = '1.1';\n\t}\n\t\n\t/**\n\t * Get `Me` object instance\n\t *\n\t * @api public\n\t */\n\t\n\tWPCOM.prototype.me = function () {\n\t  return new Me(this);\n\t};\n\t\n\t/**\n\t * Get `Site` object instance\n\t *\n\t * @param {String} id\n\t * @api public\n\t */\n\t\n\tWPCOM.prototype.site = function (id) {\n\t  return new Site(id, this);\n\t};\n\t\n\t/**\n\t * Get `Users` object instance\n\t *\n\t * @api public\n\t */\n\t\n\tWPCOM.prototype.users = function () {\n\t  return new Users(this);\n\t};\n\t\n\tWPCOM.prototype.batch = function () {\n\t  return new Batch(this);\n\t};\n\t\n\t/**\n\t * List Freshly Pressed Posts\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn callback function\n\t * @api public\n\t */\n\t\n\tWPCOM.prototype.freshlyPressed = function (query, fn) {\n\t  return this.req.get('/freshly-pressed', query, fn);\n\t};\n\t\n\t/**\n\t * Expose send-request\n\t * @TODO: use `this.req` instead of this method\n\t */\n\t\n\tWPCOM.prototype.sendRequest = function (params, query, body, fn) {\n\t  var msg = 'WARN! Don use `sendRequest() anymore. Use `this.req` method.';\n\t  if (console && console.warn) {\n\t    console.warn(msg);\n\t  } else {\n\t    console.log(msg);\n\t  }\n\t\n\t  return sendRequest.call(this, params, query, body, fn);\n\t};\n\t\n\t/**\n\t * Wraps a library callback into a Promise\n\t *\n\t * Remember to bind the method to its parent\n\t * context - extracting it out otherwise removes it.\n\t *\n\t * E.g.\n\t * wpcom.Promise( comment.del.bind( comment ) );\n\t *\n\t * The promise rejects if the normal error return from\n\t * an API call is not empty. It resolves otherwise.\n\t *\n\t * @param {function} callback wpcom.js method to call\n\t * @param params variable list of parameters to send to callback\n\t * @returns {Promise}\n\t */\n\tWPCOM.prototype.Promise = function (callback) {\n\t  for (var _len = arguments.length, params = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t    params[_key - 1] = arguments[_key];\n\t  }\n\t\n\t  return new Promise(function (resolve, reject) {\n\t    // The functions here take a variable number of arguments,\n\t    // so pass in as many as we can but keep the callback last.\n\t    callback.apply(callback, [].concat(params, [function (error, data) {\n\t      error ? reject(error) : resolve(data);\n\t    }]));\n\t  });\n\t};\n\t\n\tif (!Promise.prototype.timeout) {\n\t  /**\n\t      * Returns a new promise with a deadline\n\t      *\n\t      * After the timeout interval, the promise will\n\t      * reject. If the actual promise settles before\n\t      * the deadline, the timer is cancelled.\n\t      *\n\t      * @param {number} delay how many ms to wait\n\t      * @returns {Promise}\n\t      */\n\t  Promise.prototype.timeout = function () {\n\t    var _this = this;\n\t\n\t    var delay = arguments.length <= 0 || arguments[0] === undefined ? DEFAULT_ASYNC_TIMEOUT : arguments[0];\n\t\n\t    var cancelTimeout = undefined,\n\t        timer = undefined,\n\t        timeout = undefined;\n\t\n\t    timeout = new Promise(function (resolve, reject) {\n\t      timer = setTimeout(function () {\n\t        reject(new Error('Action timed out while waiting for response.'));\n\t      }, delay);\n\t    });\n\t\n\t    cancelTimeout = function () {\n\t      clearTimeout(timer);\n\t      return _this;\n\t    };\n\t\n\t    return Promise.race([this.then(cancelTimeout)['catch'](cancelTimeout), timeout]);\n\t  };\n\t}\n\t\n\t/**\n\t * Expose `WPCOM` module\n\t */\n\t\n\tmodule.exports = WPCOM;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar CommentLike = __webpack_require__(6);\n\tvar debug = __webpack_require__(1)('wpcom:comment');\n\t\n\t/**\n\t * Comment methods\n\t *\n\t * @param {String} [cid] comment id\n\t * @param {String} [pid] post id\n\t * @param {String} sid site id\n\t * @param {WPCOM} wpcom\n\t * @api public\n\t */\n\t\n\tfunction Comment(cid, pid, sid, wpcom) {\n\t  if (!sid) {\n\t    throw new Error('`site id` is not correctly defined');\n\t  }\n\t\n\t  if (!(this instanceof Comment)) {\n\t    return new Comment(cid, pid, sid, wpcom);\n\t  }\n\t\n\t  this.wpcom = wpcom;\n\t  this._cid = cid;\n\t  this._pid = pid;\n\t  this._sid = sid;\n\t}\n\t\n\t/**\n\t * Return a single Comment\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tComment.prototype.get = function (query, fn) {\n\t  var path = '/sites/' + this._sid + '/comments/' + this._cid;\n\t  return this.wpcom.req.get(path, query, fn);\n\t};\n\t\n\t/**\n\t * Return recent comments for a post\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tComment.prototype.replies = function (query, fn) {\n\t  var path = '/sites/' + this._sid + '/posts/' + this._pid + '/replies/';\n\t  return this.wpcom.req.get(path, query, fn);\n\t};\n\t\n\t/**\n\t * Create a comment on a post\n\t *\n\t * @param {Object} [query]\n\t * @param {String|Object} body\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tComment.prototype.add = function (query, body, fn) {\n\t  if (undefined === fn) {\n\t    if (undefined === body) {\n\t      body = query;\n\t      query = {};\n\t    } else if ('function' === typeof body) {\n\t      fn = body;\n\t      body = query;\n\t      query = {};\n\t    }\n\t  }\n\t\n\t  body = 'string' === typeof body ? { content: body } : body;\n\t\n\t  var path = '/sites/' + this._sid + '/posts/' + this._pid + '/replies/new';\n\t  return this.wpcom.req.post(path, query, body, fn);\n\t};\n\t\n\t/**\n\t * Edit a comment\n\t *\n\t * @param {Object} [query]\n\t * @param {String|Object} body\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tComment.prototype.update = function (query, body, fn) {\n\t  if ('function' === typeof body) {\n\t    fn = body;\n\t    body = query;\n\t    query = {};\n\t  }\n\t\n\t  body = 'string' === typeof body ? { content: body } : body;\n\t\n\t  var path = '/sites/' + this._sid + '/comments/' + this._cid;\n\t  return this.wpcom.req.put(path, query, body, fn);\n\t};\n\t\n\t/**\n\t * Create a Comment as a reply to another Comment\n\t *\n\t * @param {Object} [query]\n\t * @param {String|Object} body\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tComment.prototype.reply = function (query, body, fn) {\n\t  if ('function' === typeof body) {\n\t    fn = body;\n\t    body = query;\n\t    query = {};\n\t  }\n\t\n\t  body = 'string' === typeof body ? { content: body } : body;\n\t\n\t  var path = '/sites/' + this._sid + '/comments/' + this._cid + '/replies/new';\n\t  return this.wpcom.req.post(path, query, body, fn);\n\t};\n\t\n\t/**\n\t * Delete a comment\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tComment.prototype.del = Comment.prototype['delete'] = function (query, fn) {\n\t  var path = '/sites/' + this._sid + '/comments/' + this._cid + '/delete';\n\t  return this.wpcom.req.del(path, query, fn);\n\t};\n\t\n\t/**\n\t * Create a `CommentLike` instance\n\t *\n\t * @api public\n\t */\n\t\n\tComment.prototype.like = function () {\n\t  return CommentLike(this._cid, this._sid, this.wpcom);\n\t};\n\t\n\t/**\n\t * Get comment likes list\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tComment.prototype.likesList = function (query, fn) {\n\t  var path = '/sites/' + this._sid + '/comments/' + this._cid + '/likes';\n\t  return this.wpcom.req.get(path, query, fn);\n\t};\n\t\n\t/**\n\t * Expose `Comment` module\n\t */\n\t\n\tmodule.exports = Comment;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies\n\t */\n\t\n\tvar qs = __webpack_require__(18);\n\tvar debug = __webpack_require__(1)('wpcom:send-request');\n\tvar debug_res = __webpack_require__(1)('wpcom:send-request:res');\n\t\n\t/**\n\t * Request to WordPress REST API\n\t *\n\t * @param {String|Object} params\n\t * @param {Object} [query]\n\t * @param {Object} [body]\n\t * @param {Function} fn\n\t * @api private\n\t */\n\t\n\tmodule.exports = function (params, query, body, fn) {\n\t  var _this = this;\n\t\n\t  // `params` can be just the path (String)\n\t  params = 'string' === typeof params ? { path: params } : params;\n\t\n\t  debug('sendRequest(%o)', params.path);\n\t\n\t  // set `method` request param\n\t  params.method = (params.method || 'get').toUpperCase();\n\t\n\t  // `query` is optional\n\t  if ('function' === typeof query) {\n\t    fn = query;\n\t    query = {};\n\t  }\n\t\n\t  // `body` is optional\n\t  if ('function' === typeof body) {\n\t    fn = body;\n\t    body = null;\n\t  }\n\t\n\t  // query could be `null`\n\t  query = query || {};\n\t\n\t  // Handle special query parameters\n\t  // - `apiVersion`\n\t  if (query.apiVersion) {\n\t    params.apiVersion = query.apiVersion;\n\t    debug('apiVersion: %o', params.apiVersion);\n\t    delete query.apiVersion;\n\t  } else {\n\t    params.apiVersion = this.apiVersion;\n\t  }\n\t\n\t  // - `proxyOrigin`\n\t  if (query.proxyOrigin) {\n\t    params.proxyOrigin = query.proxyOrigin;\n\t    debug('proxyOrigin: %o', params.proxyOrigin);\n\t    delete query.proxyOrigin;\n\t  }\n\t\n\t  // Stringify query object before to send\n\t  query = qs.stringify(query, { arrayFormat: 'brackets' });\n\t\n\t  // pass `query` and/or `body` to request params\n\t  params.query = query;\n\t\n\t  if (body) {\n\t    params.body = body;\n\t  }\n\t  debug('params: %o', params);\n\t\n\t  // if callback is provided, behave traditionally\n\t  if ('function' === typeof fn) {\n\t    // request method\n\t    return this.request(params, function (err, res) {\n\t      debug_res(res);\n\t      fn(err, res);\n\t    });\n\t  }\n\t\n\t  // but if not, return a Promise\n\t  return new Promise(function (resolve, reject) {\n\t    _this.request(params, function (err, res) {\n\t      debug_res(res);\n\t      err ? reject(err) : resolve(res);\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar debug = __webpack_require__(1)('wpcom:batch');\n\t\n\t/**\n\t * Create a `Batch` instance\n\t *\n\t * @param {WPCOM} wpcom\n\t * @api public\n\t */\n\t\n\tfunction Batch(wpcom) {\n\t  if (!(this instanceof Batch)) {\n\t    return new Batch(wpcom);\n\t  }\n\t\n\t  this.wpcom = wpcom;\n\t\n\t  this.urls = [];\n\t}\n\t\n\t/**\n\t * Add url to batch requests\n\t *\n\t * @param {String} url\n\t * @api public\n\t */\n\t\n\tBatch.prototype.add = function (url) {\n\t  this.urls.push(url);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Run the batch request\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tBatch.prototype.run = function (query, fn) {\n\t  if (query === undefined) query = {};\n\t\n\t  if ('function' === typeof query) {\n\t    fn = query;\n\t    query = {};\n\t  }\n\t\n\t  // add urls to query object\n\t  query['urls'] = this.urls;\n\t\n\t  return this.wpcom.req.get('/batch', query, fn);\n\t};\n\t\n\t/**\n\t * Expose `Batch` module\n\t */\n\t\n\tmodule.exports = Batch;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar debug = __webpack_require__(1)('wpcom:category');\n\t\n\t/**\n\t * Category methods\n\t *\n\t * @param {String} [slug]\n\t * @param {String} sid site id\n\t * @param {WPCOM} wpcom\n\t * @api public\n\t */\n\t\n\tfunction Category(slug, sid, wpcom) {\n\t  if (!sid) {\n\t    throw new Error('`site id` is not correctly defined');\n\t  }\n\t\n\t  if (!(this instanceof Category)) {\n\t    return new Category(slug, sid, wpcom);\n\t  }\n\t\n\t  this.wpcom = wpcom;\n\t  this._sid = sid;\n\t  this._slug = slug;\n\t}\n\t\n\t/**\n\t * Set category `slug`\n\t *\n\t * @param {String} slug\n\t * @api public\n\t */\n\t\n\tCategory.prototype.slug = function (slug) {\n\t  this._slug = slug;\n\t};\n\t\n\t/**\n\t * Get category\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tCategory.prototype.get = function (query, fn) {\n\t  var path = '/sites/' + this._sid + '/categories/slug:' + this._slug;\n\t  return this.wpcom.req.get(path, query, fn);\n\t};\n\t\n\t/**\n\t * Add category\n\t *\n\t * @param {Object} [query]\n\t * @param {Object} body\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tCategory.prototype.add = function (query, body, fn) {\n\t  var path = '/sites/' + this._sid + '/categories/new';\n\t  return this.wpcom.req.post(path, query, body, fn);\n\t};\n\t\n\t/**\n\t * Edit category\n\t *\n\t * @param {Object} [query]\n\t * @param {Object} body\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tCategory.prototype.update = function (query, body, fn) {\n\t  var path = '/sites/' + this._sid + '/categories/slug:' + this._slug;\n\t  return this.wpcom.req.put(path, query, body, fn);\n\t};\n\t\n\t/**\n\t * Delete category\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tCategory.prototype['delete'] = Category.prototype.del = function (query, fn) {\n\t  var path = '/sites/' + this._sid + '/categories/slug:' + this._slug + '/delete';\n\t  return this.wpcom.req.del(path, query, fn);\n\t};\n\t\n\t/**\n\t * Expose `Category` module\n\t */\n\t\n\tmodule.exports = Category;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar debug = __webpack_require__(1)('wpcom:commentlike');\n\t\n\t/**\n\t * CommentLike methods\n\t *\n\t * @param {String} cid comment id\n\t * @param {String} sid site id\n\t * @param {WPCOM} wpcom\n\t * @api public\n\t */\n\t\n\tfunction CommentLike(cid, sid, wpcom) {\n\t  if (!sid) {\n\t    throw new Error('`site id` is not correctly defined');\n\t  }\n\t\n\t  if (!cid) {\n\t    throw new Error('`comment id` is not correctly defined');\n\t  }\n\t\n\t  if (!(this instanceof CommentLike)) {\n\t    return new CommentLike(cid, sid, wpcom);\n\t  }\n\t\n\t  this.wpcom = wpcom;\n\t  this._cid = cid;\n\t  this._sid = sid;\n\t}\n\t\n\t/**\n\t * Get your Like status for a Comment\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tCommentLike.prototype.mine = CommentLike.prototype.state = function (query, fn) {\n\t  var path = '/sites/' + this._sid + '/comments/' + this._cid + '/likes/mine';\n\t  return this.wpcom.req.get(path, query, fn);\n\t};\n\t\n\t/**\n\t * Like a comment\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tCommentLike.prototype.add = function (query, fn) {\n\t  var path = '/sites/' + this._sid + '/comments/' + this._cid + '/likes/new';\n\t  return this.wpcom.req.post(path, query, fn);\n\t};\n\t\n\t/**\n\t * Remove your Like from a Comment\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tCommentLike.prototype.del = CommentLike.prototype['delete'] = function (query, fn) {\n\t  var path = '/sites/' + this._sid + '/comments/' + this._cid + '/likes/mine/delete';\n\t  return this.wpcom.req.del(path, query, fn);\n\t};\n\t\n\t/**\n\t * Expose `CommentLike` module\n\t */\n\t\n\tmodule.exports = CommentLike;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar debug = __webpack_require__(1)('wpcom:follow');\n\t\n\t/**\n\t * Follow \n\t *\n\t * @param {String} site_id - site id\n\t * @param {WPCOM} wpcom\n\t * @api public\n\t */\n\t\n\tfunction Follow(site_id, wpcom) {\n\t  if (!site_id) {\n\t    throw new Error('`site id` is not correctly defined');\n\t  }\n\t\n\t  if (!(this instanceof Follow)) {\n\t    return new Follow(site_id, wpcom);\n\t  }\n\t\n\t  this.wpcom = wpcom;\n\t  this._sid = site_id;\n\t}\n\t\n\t/**\n\t * Get the follow status for current \n\t * user on current blog sites\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tFollow.prototype.mine = Follow.prototype.state = function (query, fn) {\n\t  var path = '/sites/' + this._sid + '/follows/mine';\n\t  return this.wpcom.req.get(path, query, fn);\n\t};\n\t\n\t/**\n\t * Follow the site\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tFollow.prototype.follow = Follow.prototype.add = function (query, fn) {\n\t  var path = '/sites/' + this._sid + '/follows/new';\n\t  return this.wpcom.req.put(path, query, null, fn);\n\t};\n\t\n\t/**\n\t * Unfollow the site\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tFollow.prototype.unfollow = Follow.prototype.del = function (query, fn) {\n\t  var path = '/sites/' + this._sid + '/follows/mine/delete';\n\t  return this.wpcom.req.del(path, query, null, fn);\n\t};\n\t\n\t/**\n\t * Expose `Follow` module\n\t */\n\t\n\tmodule.exports = Follow;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar debug = __webpack_require__(1)('wpcom:like');\n\t\n\t/**\n\t * Like methods\n\t *\n\t * @param {String} pid post id\n\t * @param {String} sid site id\n\t * @param {WPCOM} wpcom\n\t * @api public\n\t */\n\t\n\tfunction Like(pid, sid, wpcom) {\n\t  if (!sid) {\n\t    throw new Error('`site id` is not correctly defined');\n\t  }\n\t\n\t  if (!pid) {\n\t    throw new Error('`post id` is not correctly defined');\n\t  }\n\t\n\t  if (!(this instanceof Like)) {\n\t    return new Like(pid, sid, wpcom);\n\t  }\n\t\n\t  this.wpcom = wpcom;\n\t  this._pid = pid;\n\t  this._sid = sid;\n\t}\n\t\n\t/**\n\t * Get your Like status for a Post\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tLike.prototype.mine = Like.prototype.state = function (query, fn) {\n\t  var path = '/sites/' + this._sid + '/posts/' + this._pid + '/likes/mine';\n\t  return this.wpcom.req.get(path, query, fn);\n\t};\n\t\n\t/**\n\t * Like a post\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tLike.prototype.add = function (query, fn) {\n\t  var path = '/sites/' + this._sid + '/posts/' + this._pid + '/likes/new';\n\t  return this.wpcom.req.put(path, query, null, fn);\n\t};\n\t\n\t/**\n\t * Remove your Like from a Post\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tLike.prototype.del = Like.prototype['delete'] = function (query, fn) {\n\t  var path = '/sites/' + this._sid + '/posts/' + this._pid + '/likes/mine/delete';\n\t  return this.wpcom.req.del(path, query, fn);\n\t};\n\t\n\t/**\n\t * Expose `Like` module\n\t */\n\t\n\tmodule.exports = Like;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar debug = __webpack_require__(1)('wpcom:me');\n\t\n\t/**\n\t * Create a `Me` instance\n\t *\n\t * @param {WPCOM} wpcom\n\t * @api public\n\t */\n\t\n\tfunction Me(wpcom) {\n\t  if (!(this instanceof Me)) {\n\t    return new Me(wpcom);\n\t  }\n\t\n\t  this.wpcom = wpcom;\n\t}\n\t\n\t/**\n\t * Meta data about auth token's User\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tMe.prototype.get = function (query, fn) {\n\t  return this.wpcom.req.get('/me', query, fn);\n\t};\n\t\n\t/**\n\t * A list of the current user's sites\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api private\n\t */\n\t\n\tMe.prototype.sites = function (query, fn) {\n\t  return this.wpcom.req.get('/me/sites', query, fn);\n\t};\n\t\n\t/**\n\t * List the currently authorized user's likes\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tMe.prototype.likes = function (query, fn) {\n\t  return this.wpcom.req.get('/me/likes', query, fn);\n\t};\n\t\n\t/**\n\t * A list of the current user's group\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tMe.prototype.groups = function (query, fn) {\n\t  return this.wpcom.req.get('/me/groups', query, fn);\n\t};\n\t\n\t/**\n\t * A list of the current user's connections to third-party services\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tMe.prototype.connections = function (query, fn) {\n\t  return this.wpcom.req.get('/me/connections', query, fn);\n\t};\n\t\n\t/**\n\t * Expose `Me` module\n\t */\n\t\n\tmodule.exports = Me;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar fs = __webpack_require__(17);\n\tvar debug = __webpack_require__(1)('wpcom:media');\n\t\n\t/**\n\t * Default\n\t */\n\t\n\tvar def = {\n\t  \"apiVersion\": \"1.1\"\n\t};\n\t\n\t/**\n\t * Media methods\n\t *\n\t * @param {String} id\n\t * @param {String} sid site id\n\t * @param {WPCOM} wpcom\n\t * @api public\n\t */\n\t\n\tfunction Media(id, sid, wpcom) {\n\t  if (!(this instanceof Media)) {\n\t    return new Media(id, sid, wpcom);\n\t  }\n\t\n\t  this.wpcom = wpcom;\n\t  this._sid = sid;\n\t  this._id = id;\n\t\n\t  if (!this._id) {\n\t    debug('WARN: media `id` is not defined');\n\t  }\n\t}\n\t\n\t/**\n\t * Get media\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tMedia.prototype.get = function (query, fn) {\n\t  var path = '/sites/' + this._sid + '/media/' + this._id;\n\t  return this.wpcom.req.get(path, query, fn);\n\t};\n\t\n\t/**\n\t * Edit media\n\t *\n\t * @param {Object} [query]\n\t * @param {Object} body\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tMedia.prototype.update = function (query, body, fn) {\n\t  var path = '/sites/' + this._sid + '/media/' + this._id;\n\t  return this.wpcom.req.put(path, query, body, fn);\n\t};\n\t\n\t/**\n\t * Add media file\n\t *\n\t * @param {Object} [query]\n\t * @param {String|Object|Array} files\n\t * @param {Function} fn\n\t */\n\t\n\tMedia.prototype.addFiles = function (query, files, fn) {\n\t  if (undefined === fn) {\n\t    if (undefined === files) {\n\t      files = query;\n\t      query = {};\n\t    } else if ('function' === typeof files) {\n\t      fn = files;\n\t      files = query;\n\t      query = {};\n\t    }\n\t  }\n\t\n\t  var params = {\n\t    path: '/sites/' + this._sid + '/media/new',\n\t    formData: []\n\t  };\n\t\n\t  // process formData\n\t  files = Array.isArray(files) ? files : [files];\n\t\n\t  var i, f, isStream, isFile, k, param;\n\t  for (i = 0; i < files.length; i++) {\n\t    f = files[i];\n\t    f = 'string' === typeof f ? fs.createReadStream(f) : f;\n\t\n\t    isStream = !!f._readableState;\n\t    isFile = 'undefined' !== typeof File && f instanceof File;\n\t\n\t    debug('is stream: %s', isStream);\n\t    debug('is file: %s', isFile);\n\t\n\t    if (!isFile && !isStream) {\n\t      // process file attributes like as `title`, `description`, ...\n\t      for (k in f) {\n\t        debug('add %o => %o', k, f[k]);\n\t        if ('file' !== k) {\n\t          param = 'attrs[' + i + '][' + k + ']';\n\t          params.formData.push([param, f[k]]);\n\t        }\n\t      }\n\t      // set file path\n\t      f = f.file;\n\t      f = 'string' === typeof f ? fs.createReadStream(f) : f;\n\t    }\n\t\n\t    params.formData.push(['media[]', f]);\n\t  }\n\t\n\t  return this.wpcom.req.post(params, query, null, fn);\n\t};\n\t\n\t/**\n\t * Add media files from URL\n\t *\n\t * @param {Object} [query]\n\t * @param {String|Array|Object} files\n\t * @param {Function} fn\n\t */\n\t\n\tMedia.prototype.addUrls = function (query, media, fn) {\n\t  if (undefined === fn) {\n\t    if (undefined === media) {\n\t      media = query;\n\t      query = {};\n\t    } else if ('function' === typeof media) {\n\t      fn = media;\n\t      media = query;\n\t      query = {};\n\t    }\n\t  }\n\t\n\t  var path = '/sites/' + this._sid + '/media/new';\n\t  var body = { media_urls: [] };\n\t\n\t  // process formData\n\t  var i, m, url, k;\n\t\n\t  media = Array.isArray(media) ? media : [media];\n\t  for (i = 0; i < media.length; i++) {\n\t    m = media[i];\n\t\n\t    if ('string' === typeof m) {\n\t      url = m;\n\t    } else {\n\t      if (!body.attrs) {\n\t        body.attrs = [];\n\t      }\n\t\n\t      // add attributes\n\t      body.attrs[i] = {};\n\t      for (k in m) {\n\t        if ('url' !== k) {\n\t          body.attrs[i][k] = m[k];\n\t        }\n\t      }\n\t      url = m[k];\n\t    }\n\t\n\t    // push url into [media_url]\n\t    body.media_urls.push(url);\n\t  }\n\t\n\t  return this.wpcom.req.post(path, query, body, fn);\n\t};\n\t\n\t/**\n\t * Delete media\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tMedia.prototype['delete'] = Media.prototype.del = function (query, fn) {\n\t  var path = '/sites/' + this._sid + '/media/' + this._id + '/delete';\n\t  return this.wpcom.req.del(path, query, fn);\n\t};\n\t\n\t/**\n\t * Expose `Media` module\n\t */\n\t\n\tmodule.exports = Media;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar Like = __webpack_require__(8);\n\tvar Reblog = __webpack_require__(12);\n\tvar Comment = __webpack_require__(2);\n\tvar debug = __webpack_require__(1)('wpcom:post');\n\t\n\t/**\n\t * Post methods\n\t *\n\t * @param {String} id\n\t * @param {String} sid site id\n\t * @param {WPCOM} wpcom\n\t * @api public\n\t */\n\t\n\tfunction Post(id, sid, wpcom) {\n\t  if (!(this instanceof Post)) {\n\t    return new Post(id, sid, wpcom);\n\t  }\n\t\n\t  this.wpcom = wpcom;\n\t  this._sid = sid;\n\t\n\t  // set `id` and/or `slug` properties\n\t  id = id || {};\n\t  if ('object' !== typeof id) {\n\t    this._id = id;\n\t  } else {\n\t    this._id = id.id;\n\t    this._slug = id.slug;\n\t  }\n\t}\n\t\n\t/**\n\t * Set post `id`\n\t *\n\t * @param {String} id\n\t * @api public\n\t */\n\t\n\tPost.prototype.id = function (id) {\n\t  this._id = id;\n\t};\n\t\n\t/**\n\t * Set post `slug`\n\t *\n\t * @param {String} slug\n\t * @api public\n\t */\n\t\n\tPost.prototype.slug = function (slug) {\n\t  this._slug = slug;\n\t};\n\t\n\t/**\n\t * Get post\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tPost.prototype.get = function (query, fn) {\n\t  if (!this._id && this._slug) {\n\t    return this.getBySlug(query, fn);\n\t  }\n\t\n\t  var path = '/sites/' + this._sid + '/posts/' + this._id;\n\t  return this.wpcom.req.get(path, query, fn);\n\t};\n\t\n\t/**\n\t * Get post by slug\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tPost.prototype.getBySlug = function (query, fn) {\n\t  var path = '/sites/' + this._sid + '/posts/slug:' + this._slug;\n\t  return this.wpcom.req.get(path, query, fn);\n\t};\n\t\n\t/**\n\t * Add post\n\t *\n\t * @param {Object} [query]\n\t * @param {Object} body\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tPost.prototype.add = function (query, body, fn) {\n\t  var _this = this;\n\t\n\t  if (undefined === fn) {\n\t    if (undefined === body) {\n\t      body = query;\n\t      query = {};\n\t    } else if ('function' === typeof body) {\n\t      fn = body;\n\t      body = query;\n\t      query = {};\n\t    }\n\t  }\n\t\n\t  var path = '/sites/' + this._sid + '/posts/new';\n\t\n\t  return this.wpcom.req.post(path, query, body).then(function (data) {\n\t    // update POST object\n\t    _this._id = data.ID;\n\t    debug('Set post _id: %s', _this._id);\n\t\n\t    _this._slug = data.slug;\n\t    debug('Set post _slug: %s', _this._slug);\n\t\n\t    if ('function' === typeof fn) {\n\t      fn(null, data);\n\t    } else {\n\t      return Promise.resolve(data);\n\t    }\n\t  })['catch'](function (err) {\n\t    if ('function' === typeof fn) {\n\t      fn(err);\n\t    } else {\n\t      return Promise.reject(error);\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Edit post\n\t *\n\t * @param {Object} [query]\n\t * @param {Object} body\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tPost.prototype.update = function (query, body, fn) {\n\t  var path = '/sites/' + this._sid + '/posts/' + this._id;\n\t  return this.wpcom.req.put(path, query, body, fn);\n\t};\n\t\n\t/**\n\t * Delete post\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tPost.prototype.del = Post.prototype['delete'] = function (query, fn) {\n\t  var path = '/sites/' + this._sid + '/posts/' + this._id + '/delete';\n\t  return this.wpcom.req.del(path, query, fn);\n\t};\n\t\n\t/**\n\t * Restore post\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tPost.prototype.restore = function (query, fn) {\n\t  var path = '/sites/' + this._sid + '/posts/' + this._id + '/restore';\n\t  return this.wpcom.req.put(path, query, null, fn);\n\t};\n\t\n\t/**\n\t * Get post likes list\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tPost.prototype.likesList = function (query, fn) {\n\t  var path = '/sites/' + this._sid + '/posts/' + this._id + '/likes';\n\t  return this.wpcom.req.get(path, query, fn);\n\t};\n\t\n\t/**\n\t * Search within a site for related posts\n\t *\n\t * @param {Object} body\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tPost.prototype.related = function (body, fn) {\n\t  var path = '/sites/' + this._sid + '/posts/' + this._id + '/related';\n\t  return this.wpcom.req.put(path, body, null, fn);\n\t};\n\t\n\t/**\n\t * Create a `Like` instance\n\t *\n\t * @api public\n\t */\n\t\n\tPost.prototype.like = function () {\n\t  return new Like(this._id, this._sid, this.wpcom);\n\t};\n\t\n\t/**\n\t * Create a `Reblog` instance\n\t *\n\t * @api public\n\t */\n\t\n\tPost.prototype.reblog = function () {\n\t  return new Reblog(this._id, this._sid, this.wpcom);\n\t};\n\t\n\t/**\n\t * Create a `Comment` instance\n\t *\n\t * @param {String} [cid] comment id\n\t * @api public\n\t */\n\t\n\tPost.prototype.comment = function (cid) {\n\t  return new Comment(cid, this._id, this._sid, this.wpcom);\n\t};\n\t\n\t/**\n\t * Return recent comments\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tPost.prototype.comments = function (query, fn) {\n\t  var comment = new Comment(null, this._id, this._sid, this.wpcom);\n\t  return comment.replies(query, fn);\n\t};\n\t\n\t/**\n\t * Expose `Post` module\n\t */\n\t\n\tmodule.exports = Post;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar debug = __webpack_require__(1)('wpcom:reblog');\n\t\n\t/**\n\t * Reblog methods\n\t *\n\t * @param {String} pid post id\n\t * @param {String} sid site id\n\t * @param {WPCOM} wpcom\n\t * @api public\n\t */\n\t\n\tfunction Reblog(pid, sid, wpcom) {\n\t  if (!sid) {\n\t    throw new Error('`site id` is not correctly defined');\n\t  }\n\t\n\t  if (!pid) {\n\t    throw new Error('`post id` is not correctly defined');\n\t  }\n\t\n\t  if (!(this instanceof Reblog)) {\n\t    return new Reblog(pid, sid, wpcom);\n\t  }\n\t\n\t  this.wpcom = wpcom;\n\t  this._pid = pid;\n\t  this._sid = sid;\n\t}\n\t\n\t/**\n\t * Get your reblog status for a Post\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tReblog.prototype.mine = Reblog.prototype.state = function (query, fn) {\n\t  var path = '/sites/' + this._sid + '/posts/' + this._pid + '/reblogs/mine';\n\t  return this.wpcom.req.get(path, query, fn);\n\t};\n\t\n\t/**\n\t * Reblog a post\n\t *\n\t * @param {Object} [query]\n\t * @param {Object} body\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tReblog.prototype.add = function (query, body, fn) {\n\t  if ('function' === typeof body) {\n\t    fn = body;\n\t    body = query;\n\t    query = {};\n\t  }\n\t\n\t  if (body && !body.destination_site_id) {\n\t    return fn(new Error('destination_site_id is not defined'));\n\t  }\n\t\n\t  var path = '/sites/' + this._sid + '/posts/' + this._pid + '/reblogs/new';\n\t  return this.wpcom.req.put(path, query, body, fn);\n\t};\n\t\n\t/**\n\t * Reblog a post to\n\t * It's almost an alias of Reblogs#add\n\t *\n\t * @param {Number|String} dest site id destination\n\t * @param {String} [note]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tReblog.prototype.to = function (dest, note, fn) {\n\t  if (undefined === fn) {\n\t    if (undefined === note) {\n\t      note = null;\n\t    } else if ('function' === typeof note) {\n\t      fn = note;\n\t      note = null;\n\t    }\n\t  }\n\t\n\t  return this.add({ note: note, destination_site_id: dest }, fn);\n\t};\n\t\n\t/**\n\t * Expose `Reblog` module\n\t */\n\t\n\tmodule.exports = Reblog;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar Post = __webpack_require__(11);\n\tvar Category = __webpack_require__(5);\n\tvar Tag = __webpack_require__(14);\n\tvar Media = __webpack_require__(10);\n\tvar Comment = __webpack_require__(2);\n\tvar Follow = __webpack_require__(7);\n\tvar debug = __webpack_require__(1)('wpcom:site');\n\t\n\t/**\n\t * Resources array\n\t * A list of endpoints with the same structure\n\t */\n\t\n\tvar resources = ['categories', 'comments', 'follows', 'media', 'posts', 'shortcodes', 'embeds', ['pageTemplates', 'page-templates'], ['stats', 'stats'], ['statsClicks', 'stats/clicks'], ['statsComments', 'stats/comments'], ['statsCommentFollowers', 'stats/comment-followers'], ['statsCountryViews', 'stats/country-views'], ['statsFollowers', 'stats/followers'], ['statsPublicize', 'stats/publicize'], ['statsReferrers', 'stats/referrers'], ['statsSearchTerms', 'stats/search-terms'], ['statsStreak', 'stats/streak'], ['statsSummary', 'stats/summary'], ['statsTags', 'stats/tags'], ['statsTopAuthors', 'stats/top-authors'], ['statsTopPosts', 'stats/top-posts'], ['statsVideoPlays', 'stats/video-plays'], ['statsVisits', 'stats/visits'], 'tags', 'users'];\n\t\n\t/**\n\t * Create a Site instance\n\t *\n\t * @param {WPCOM} wpcom\n\t * @api public\n\t */\n\t\n\tfunction Site(id, wpcom) {\n\t  if (!(this instanceof Site)) {\n\t    return new Site(id, wpcom);\n\t  }\n\t\n\t  this.wpcom = wpcom;\n\t\n\t  debug('set %o site id', id);\n\t  this._id = encodeURIComponent(id);\n\t}\n\t\n\t/**\n\t * Require site information\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tSite.prototype.get = function (query, fn) {\n\t  return this.wpcom.req.get('/sites/' + this._id, query, fn);\n\t};\n\t\n\t/**\n\t * List method builder\n\t *\n\t * @param {String} subpath\n\t * @param {Function}\n\t * @api private\n\t */\n\t\n\tfunction list(subpath) {\n\t\n\t  /**\n\t   * Create and return the <names>List method\n\t   *\n\t   * @param {Object} [query]\n\t   * @param {Function} fn\n\t   * @api public\n\t   */\n\t\n\t  var listMethod = function listMethod(query, fn) {\n\t    var path = '/sites/' + this._id + '/' + subpath;\n\t    return this.wpcom.req.get(path, query, fn);\n\t  };\n\t  listMethod._publicAPI = true;\n\t  return listMethod;\n\t}\n\t\n\t// walk for each resource and create related method\n\tvar i, res, isarr, name, subpath;\n\tfor (i = 0; i < resources.length; i++) {\n\t  res = resources[i];\n\t  isarr = Array.isArray(res);\n\t\n\t  name = isarr ? res[0] : res + 'List';\n\t  subpath = isarr ? res[1] : res;\n\t\n\t  debug('adding method: %o - sub-path: %o - version: %s', 'site.' + name + '()', subpath);\n\t  Site.prototype[name] = list(subpath);\n\t}\n\t\n\t/**\n\t * :POST:\n\t * Create a `Post` instance\n\t *\n\t * @param {String} id\n\t * @api public\n\t */\n\t\n\tSite.prototype.post = function (id) {\n\t  return new Post(id, this._id, this.wpcom);\n\t};\n\t\n\t/**\n\t * :POST:\n\t * Add a new blog post\n\t *\n\t * @param {Object} body\n\t * @param {Function} fn\n\t * @return {Post} new Post instance\n\t */\n\t\n\tSite.prototype.addPost = function (body, fn) {\n\t  var post = new Post(null, this._id, this.wpcom);\n\t  return post.add(body, fn);\n\t};\n\t\n\t/**\n\t * :POST:\n\t * Delete a blog post\n\t *\n\t * @param {String} id\n\t * @param {Function} fn\n\t * @return {Post} remove Post instance\n\t */\n\t\n\tSite.prototype.deletePost = function (id, fn) {\n\t  var post = new Post(id, this._id, this.wpcom);\n\t  return post['delete'](fn);\n\t};\n\t\n\t/**\n\t * Create a `Media` instance\n\t *\n\t * @param {String} id\n\t * @api public\n\t */\n\t\n\tSite.prototype.media = function (id) {\n\t  return new Media(id, this._id, this.wpcom);\n\t};\n\t\n\t/**\n\t * Add a media from a file\n\t *\n\t * @param {Object} [query]\n\t * @param {Array|String} files\n\t * @param {Function} fn\n\t * @return {Post} new Post instance\n\t */\n\t\n\tSite.prototype.addMediaFiles = function (query, files, fn) {\n\t  var media = new Media(null, this._id, this.wpcom);\n\t  return media.addFiles(query, files, fn);\n\t};\n\t\n\t/**\n\t * Add a new media from url\n\t *\n\t * @param {Object} [query]\n\t * @param {Array|String} files\n\t * @param {Function} fn\n\t * @return {Post} new Post instance\n\t */\n\t\n\tSite.prototype.addMediaUrls = function (query, files, fn) {\n\t  var media = new Media(null, this._id, this.wpcom);\n\t  return media.addUrls(query, files, fn);\n\t};\n\t\n\t/**\n\t * Delete a blog media\n\t *\n\t * @param {String} id\n\t * @param {Function} fn\n\t * @return {Post} removed Media instance\n\t */\n\t\n\tSite.prototype.deleteMedia = function (id, fn) {\n\t  var media = new Media(id, this._id, this.wpcom);\n\t  return media.del(fn);\n\t};\n\t\n\t/**\n\t * Create a `Comment` instance\n\t *\n\t * @param {String} id\n\t * @api public\n\t */\n\t\n\tSite.prototype.comment = function (id) {\n\t  return new Comment(id, null, this._id, this.wpcom);\n\t};\n\t\n\t/**\n\t * Create a `Follow` instance\n\t *\n\t * @api public\n\t */\n\t\n\tSite.prototype.follow = function () {\n\t  return new Follow(this._id, this.wpcom);\n\t};\n\t\n\t/**\n\t * Create a `Category` instance\n\t * Set `cat` alias\n\t *\n\t * @param {String} [slug]\n\t * @api public\n\t */\n\t\n\tSite.prototype.cat = Site.prototype.category = function (slug) {\n\t  return new Category(slug, this._id, this.wpcom);\n\t};\n\t\n\t/**\n\t * Create a `Tag` instance\n\t *\n\t * @param {String} [slug]\n\t * @api public\n\t */\n\t\n\tSite.prototype.tag = function (slug) {\n\t  return new Tag(slug, this._id, this.wpcom);\n\t};\n\t\n\t/**\n\t * Get a rendered shortcode for a site.\n\t *\n\t * Note: The current user must have publishing access.\n\t *\n\t * @param {String} url\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tSite.prototype.renderShortcode = function (url, query, fn) {\n\t  if ('string' !== typeof url) {\n\t    throw new TypeError('expected a url String');\n\t  }\n\t\n\t  if ('function' == typeof query) {\n\t    fn = query;\n\t    query = {};\n\t  }\n\t\n\t  query = query || {};\n\t  query.shortcode = url;\n\t\n\t  var path = '/sites/' + this._id + '/shortcodes/render';\n\t\n\t  return this.wpcom.req.get(path, query, fn);\n\t};\n\t\n\t/**\n\t * Get a rendered embed for a site.\n\t *\n\t * Note: The current user must have publishing access.\n\t *\n\t * @param {String} url\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tSite.prototype.renderEmbed = function (url, query, fn) {\n\t  if ('string' !== typeof url) {\n\t    throw new TypeError('expected an embed String');\n\t  }\n\t\n\t  if ('function' == typeof query) {\n\t    fn = query;\n\t    query = {};\n\t  }\n\t\n\t  query = query || {};\n\t  query.embed_url = url;\n\t\n\t  var path = '/sites/' + this._id + '/embeds/render';\n\t  return this.wpcom.req.get(path, query, fn);\n\t};\n\t\n\t/**\n\t * Mark a referrering domain as spam\n\t *\n\t * @param {String} domain\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tSite.prototype.statsReferrersSpamNew = function (domain, fn) {\n\t  var path = '/sites/' + this._id + '/stats/referrers/spam/new';\n\t  var body = { domain: domain };\n\t\n\t  return this.wpcom.req.post(path, body, null, fn);\n\t};\n\t\n\t/**\n\t * Remove referrering domain from spam\n\t *\n\t * @param {String} domain\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tSite.prototype.statsReferrersSpamDelete = function (domain, fn) {\n\t  var path = '/sites/' + this._id + '/stats/referrers/spam/delete';\n\t  var body = { domain: domain };\n\t\n\t  return this.wpcom.req.post(path, body, null, fn);\n\t};\n\t\n\t/**\n\t * Get detailed stats about a VideoPress video\n\t *\n\t * @param {String} videoId\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tSite.prototype.statsVideo = function (videoId, query, fn) {\n\t  var path = '/sites/' + this._id + '/stats/video/' + videoId;\n\t\n\t  if ('function' == typeof query) {\n\t    fn = query;\n\t    query = {};\n\t  }\n\t\n\t  return this.wpcom.req.get(path, query, fn);\n\t};\n\t\n\t/**\n\t * Get detailed stats about a particular post\n\t *\n\t * @param {String} postId\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tSite.prototype.statsPostViews = function (postId, query, fn) {\n\t  var path = '/sites/' + this._id + '/stats/post/' + postId;\n\t\n\t  if ('function' == typeof query) {\n\t    fn = query;\n\t    query = {};\n\t  }\n\t\n\t  return this.wpcom.req.get(path, query, fn);\n\t};\n\t\n\t/**\n\t * Expose `Site` module\n\t */\n\t\n\tmodule.exports = Site;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar debug = __webpack_require__(1)('wpcom:tag');\n\t\n\t/**\n\t * Tag methods\n\t *\n\t * @param {String} [slug]\n\t * @param {String} sid site id\n\t * @param {WPCOM} wpcom\n\t * @api public\n\t */\n\t\n\tfunction Tag(slug, sid, wpcom) {\n\t  if (!sid) {\n\t    throw new Error('`site id` is not correctly defined');\n\t  }\n\t\n\t  if (!(this instanceof Tag)) {\n\t    return new Tag(slug, sid, wpcom);\n\t  }\n\t\n\t  this.wpcom = wpcom;\n\t  this._sid = sid;\n\t  this._slug = slug;\n\t}\n\t\n\t/**\n\t * Set tag `slug`\n\t *\n\t * @param {String} slug\n\t * @api public\n\t */\n\t\n\tTag.prototype.slug = function (slug) {\n\t  this._slug = slug;\n\t};\n\t\n\t/**\n\t * Get tag\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tTag.prototype.get = function (query, fn) {\n\t  var path = '/sites/' + this._sid + '/tags/slug:' + this._slug;\n\t  return this.wpcom.req.get(path, query, fn);\n\t};\n\t\n\t/**\n\t * Add tag\n\t *\n\t * @param {Object} [query]\n\t * @param {Object} body\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tTag.prototype.add = function (query, body, fn) {\n\t  var path = '/sites/' + this._sid + '/tags/new';\n\t  return this.wpcom.req.post(path, query, body, fn);\n\t};\n\t\n\t/**\n\t * Edit tag\n\t *\n\t * @param {Object} [query]\n\t * @param {Object} body\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tTag.prototype.update = function (query, body, fn) {\n\t  var path = '/sites/' + this._sid + '/tags/slug:' + this._slug;\n\t  return this.wpcom.req.put(path, query, body, fn);\n\t};\n\t\n\t/**\n\t * Delete tag\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tTag.prototype['delete'] = Tag.prototype.del = function (query, fn) {\n\t  var path = '/sites/' + this._sid + '/tags/slug:' + this._slug + '/delete';\n\t  return this.wpcom.req.del(path, query, fn);\n\t};\n\t\n\t/**\n\t * Expose `Tag` module\n\t */\n\t\n\tmodule.exports = Tag;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar debug = __webpack_require__(1)('wpcom:users');\n\t\n\t/**\n\t * Create a `Users` instance\n\t *\n\t * @param {WPCOM} wpcom\n\t * @api public\n\t */\n\t\n\tfunction Users(wpcom) {\n\t  if (!(this instanceof Users)) {\n\t    return new Users(wpcom);\n\t  }\n\t\n\t  this.wpcom = wpcom;\n\t}\n\t\n\t/**\n\t * A list of @mention suggestions for the current user\n\t *\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tUsers.prototype.suggest = function (query, fn) {\n\t  return this.wpcom.req.get('/users/suggest', query, fn);\n\t};\n\t\n\t/**\n\t * Expose `Users` module\n\t */\n\t\n\tmodule.exports = Users;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar sendRequest = __webpack_require__(3);\n\tvar debug = __webpack_require__(1)('wpcom:request');\n\t\n\t/**\n\t * Expose `Request` module\n\t */\n\t\n\tfunction Req(wpcom) {\n\t  this.wpcom = wpcom;\n\t}\n\t\n\t/**\n\t * Request methods\n\t *\n\t * @param {Object|String} params\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tReq.prototype.get = function (params, query, fn) {\n\t  // `query` is optional\n\t  if ('function' == typeof query) {\n\t    fn = query;\n\t    query = {};\n\t  }\n\t\n\t  return sendRequest.call(this.wpcom, params, query, null, fn);\n\t};\n\t\n\t/**\n\t * Make `update` request\n\t *\n\t * @param {Object|String} params\n\t * @param {Object} [query]\n\t * @param {Object} body\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tReq.prototype.post = Req.prototype.put = function (params, query, body, fn) {\n\t  if (undefined === fn) {\n\t    if (undefined === body) {\n\t      body = query;\n\t      query = {};\n\t    } else if ('function' === typeof body) {\n\t      fn = body;\n\t      body = query;\n\t      query = {};\n\t    }\n\t  }\n\t\n\t  // params can be a string\n\t  params = 'string' === typeof params ? { path: params } : params;\n\t\n\t  // request method\n\t  params.method = 'post';\n\t\n\t  return sendRequest.call(this.wpcom, params, query, body, fn);\n\t};\n\t\n\t/**\n\t * Make a `delete` request\n\t *\n\t * @param {Object|String} params\n\t * @param {Object} [query]\n\t * @param {Function} fn\n\t * @api public\n\t */\n\t\n\tReq.prototype.del = function (params, query, fn) {\n\t  if ('function' == typeof query) {\n\t    fn = query;\n\t    query = {};\n\t  }\n\t\n\t  return this.post(params, query, null, fn);\n\t};\n\t\n\t/**\n\t * Expose module\n\t */\n\t\n\tmodule.exports = Req;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_17__;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_18__;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_19__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** wpcom.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 41e2087e1f8266bcbb99\n **/","\n\n/**\n * Module dependencies.\n */\n\nvar request_handler = require('wpcom-xhr-request');\n\n/**\n * Local module dependencies.\n */\n\nvar Me = require('./lib/me');\nvar Site = require('./lib/site');\nvar Users = require('./lib/users');\nvar Batch = require('./lib/batch');\nvar Req = require('./lib/util/request');\nvar sendRequest = require('./lib/util/send-request');\nvar debug = require('debug')('wpcom');\n\n/**\n * Local module constants\n */\nvar DEFAULT_ASYNC_TIMEOUT = 30000;\n\n/**\n * XMLHttpRequest (and CORS) API access method.\n *\n * API authentication is done via an (optional) access `token`,\n * which needs to be retrieved via OAuth.\n *\n * Request Handler is optional and XHR is defined as default.\n *\n * @param {String} [token] - OAuth API access token\n * @param {Function} [reqHandler] - function Request Handler\n * @public\n */\n\nfunction WPCOM(token, reqHandler) {\n  if (!(this instanceof WPCOM)) {\n    return new WPCOM(token, reqHandler);\n  }\n\n  // `token` is optional\n  if ('function' === typeof token) {\n    reqHandler = token;\n    token = null;\n  }\n\n  if (token) {\n    debug('Token defined: %s…', token.substring(0, 6));\n    this.token = token;\n  }\n\n  // Set default request handler\n  if (!reqHandler) {\n    debug('No request handler. Adding default XHR request handler');\n\n    this.request = function (params, fn) {\n      params = params || {};\n\n      // token is optional\n      if (token) {\n        params.authToken = token;\n      }\n\n      return request_handler(params, fn);\n    };\n  } else {\n    this.request = reqHandler;\n  }\n\n  // Add Req instance\n  this.req = new Req(this);\n\n  // Default api version;\n  this.apiVersion = '1.1';\n}\n\n/**\n * Get `Me` object instance\n *\n * @api public\n */\n\nWPCOM.prototype.me = function () {\n  return new Me(this);\n};\n\n/**\n * Get `Site` object instance\n *\n * @param {String} id\n * @api public\n */\n\nWPCOM.prototype.site = function (id) {\n  return new Site(id, this);\n};\n\n/**\n * Get `Users` object instance\n *\n * @api public\n */\n\nWPCOM.prototype.users = function () {\n  return new Users(this);\n};\n\n\nWPCOM.prototype.batch = function () {\n  return new Batch(this);\n};\n\n/**\n * List Freshly Pressed Posts\n *\n * @param {Object} [query]\n * @param {Function} fn callback function\n * @api public\n */\n\nWPCOM.prototype.freshlyPressed = function (query, fn) {\n  return this.req.get('/freshly-pressed', query, fn);\n};\n\n/**\n * Expose send-request\n * @TODO: use `this.req` instead of this method\n */\n\nWPCOM.prototype.sendRequest = function (params, query, body, fn) {\n  var msg = 'WARN! Don use `sendRequest() anymore. Use `this.req` method.';\n  if (console && console.warn) {\n    console.warn(msg);\n  } else {\n    console.log(msg);\n  }\n\n  return sendRequest.call(this, params, query, body, fn)\n};\n\n/**\n * Wraps a library callback into a Promise\n *\n * Remember to bind the method to its parent\n * context - extracting it out otherwise removes it.\n *\n * E.g.\n * wpcom.Promise( comment.del.bind( comment ) );\n *\n * The promise rejects if the normal error return from\n * an API call is not empty. It resolves otherwise.\n *\n * @param {function} callback wpcom.js method to call\n * @param params variable list of parameters to send to callback\n * @returns {Promise}\n */\nWPCOM.prototype.Promise = ( callback, ...params ) => {\n  return new Promise( ( resolve, reject ) => {\n    // The functions here take a variable number of arguments,\n    // so pass in as many as we can but keep the callback last.\n    callback.apply( callback, [...params, ( error, data ) => {\n      error ? reject( error ) : resolve( data );\n    } ] );\n  } );\n};\n\nif ( ! Promise.prototype.timeout ) {\n\t/**\n     * Returns a new promise with a deadline\n     *\n     * After the timeout interval, the promise will\n     * reject. If the actual promise settles before\n     * the deadline, the timer is cancelled.\n     *\n     * @param {number} delay how many ms to wait\n     * @returns {Promise}\n     */\n  Promise.prototype.timeout = function( delay = DEFAULT_ASYNC_TIMEOUT ) {\n    let cancelTimeout, timer, timeout;\n\n    timeout = new Promise( ( resolve, reject ) => {\n      timer = setTimeout( () => {\n        reject( new Error( 'Action timed out while waiting for response.' ) );\n      }, delay );\n    } );\n\n    cancelTimeout = () => {\n      clearTimeout( timer );\n      return this;\n    };\n\n    return Promise.race( [ this.then( cancelTimeout ).catch( cancelTimeout ), timeout ] );\n  };\n}\n\n/**\n * Expose `WPCOM` module\n */\n\nmodule.exports = WPCOM;\n\n\n\n/** WEBPACK FOOTER **\n ** ./wpcom.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"debug\"\n ** module id = 1\n ** module chunks = 0\n **/","\n/**\n * Module dependencies.\n */\n\nvar CommentLike = require('./commentlike');\nvar debug = require('debug')('wpcom:comment');\n\n/**\n * Comment methods\n *\n * @param {String} [cid] comment id\n * @param {String} [pid] post id\n * @param {String} sid site id\n * @param {WPCOM} wpcom\n * @api public\n */\n\nfunction Comment(cid, pid, sid, wpcom) {\n  if (!sid) {\n    throw new Error('`site id` is not correctly defined');\n  }\n\n  if (!(this instanceof Comment)) {\n    return new Comment(cid, pid, sid, wpcom);\n  }\n\n  this.wpcom = wpcom;\n  this._cid = cid;\n  this._pid = pid;\n  this._sid = sid;\n}\n\n/**\n * Return a single Comment\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nComment.prototype.get = function (query, fn) {\n  var path = '/sites/' + this._sid + '/comments/' + this._cid;\n  return this.wpcom.req.get(path, query, fn);\n};\n\n/**\n * Return recent comments for a post\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nComment.prototype.replies = function (query, fn) {\n  var path = '/sites/' + this._sid + '/posts/' + this._pid + '/replies/';\n  return this.wpcom.req.get(path, query, fn);\n};\n\n/**\n * Create a comment on a post\n *\n * @param {Object} [query]\n * @param {String|Object} body\n * @param {Function} fn\n * @api public\n */\n\nComment.prototype.add = function (query, body, fn) {\n  if ( undefined === fn ) {\n    if ( undefined === body ) {\n      body = query;\n      query = {};\n    } else if ( 'function' === typeof body ) {\n      fn = body;\n      body = query;\n      query = {};\n    }\n  }\n\n  body = 'string' === typeof body ? { content: body } : body;\n\n  var path = '/sites/' + this._sid + '/posts/' + this._pid + '/replies/new';\n  return this.wpcom.req.post(path, query, body, fn);\n};\n\n/**\n * Edit a comment\n *\n * @param {Object} [query]\n * @param {String|Object} body\n * @param {Function} fn\n * @api public\n */\n\nComment.prototype.update = function (query, body, fn) {\n  if ('function' === typeof body) {\n    fn = body;\n    body = query;\n    query = {};\n  }\n\n  body = 'string' === typeof body ? { content: body } : body;\n\n  var path = '/sites/' + this._sid + '/comments/' + this._cid;\n  return this.wpcom.req.put(path, query, body, fn);\n};\n\n/**\n * Create a Comment as a reply to another Comment\n *\n * @param {Object} [query]\n * @param {String|Object} body\n * @param {Function} fn\n * @api public\n */\n\nComment.prototype.reply = function (query, body, fn) {\n  if ('function' === typeof body) {\n    fn = body;\n    body = query;\n    query = {};\n  }\n\n  body = 'string' === typeof body ? { content: body } : body;\n\n  var path = '/sites/' + this._sid + '/comments/' + this._cid + '/replies/new';\n  return this.wpcom.req.post(path, query, body, fn);\n};\n\n/**\n * Delete a comment\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nComment.prototype.del =\nComment.prototype['delete'] = function (query, fn) {\n  var path = '/sites/' + this._sid + '/comments/' + this._cid + '/delete';\n  return this.wpcom.req.del(path, query, fn);\n};\n\n/**\n * Create a `CommentLike` instance\n *\n * @api public\n */\n\nComment.prototype.like = function() {\n  return CommentLike(this._cid, this._sid, this.wpcom);\n};\n\n/**\n * Get comment likes list\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nComment.prototype.likesList = function (query, fn) {\n  var path = '/sites/' + this._sid + '/comments/' + this._cid + '/likes';\n  return this.wpcom.req.get(path, query, fn);\n};\n\n/**\n * Expose `Comment` module\n */\n\nmodule.exports = Comment;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/comment.js\n **/","\n/**\n * Module dependencies\n */\n\nvar qs = require('qs');\nvar debug = require('debug')('wpcom:send-request');\nvar debug_res = require('debug')('wpcom:send-request:res');\n\n/**\n * Request to WordPress REST API\n *\n * @param {String|Object} params\n * @param {Object} [query]\n * @param {Object} [body]\n * @param {Function} fn\n * @api private\n */\n\nmodule.exports = function (params, query, body, fn) {\n  // `params` can be just the path (String)\n  params = 'string' === typeof params ? { path : params } : params;\n\n  debug('sendRequest(%o)', params.path);\n\n  // set `method` request param\n  params.method = (params.method || 'get').toUpperCase();\n\n  // `query` is optional\n  if ('function' === typeof query) {\n    fn = query;\n    query = {};\n  }\n\n  // `body` is optional\n  if ('function' === typeof body) {\n    fn = body;\n    body = null;\n  }\n\n  // query could be `null`\n  query = query || {};\n\n  // Handle special query parameters\n  // - `apiVersion`\n  if (query.apiVersion) {\n    params.apiVersion = query.apiVersion;\n    debug('apiVersion: %o', params.apiVersion);\n    delete query.apiVersion;\n  } else {\n    params.apiVersion = this.apiVersion;\n  }\n\n  // - `proxyOrigin`\n  if (query.proxyOrigin) {\n    params.proxyOrigin = query.proxyOrigin;\n    debug('proxyOrigin: %o', params.proxyOrigin);\n    delete query.proxyOrigin;\n  }\n\n  // Stringify query object before to send\n  query = qs.stringify(query, { arrayFormat: 'brackets' });\n\n  // pass `query` and/or `body` to request params\n  params.query = query;\n\n  if (body) {\n    params.body = body;\n  }\n  debug('params: %o', params);\n\n  // if callback is provided, behave traditionally\n  if ('function' === typeof fn) {\n    // request method\n    return this.request(params, function(err, res) {\n      debug_res(res);\n      fn(err, res);\n    });\n  }\n\n  // but if not, return a Promise\n  return new Promise((resolve, reject) => {\n    this.request(params, (err, res) => {\n      debug_res(res);\n      err ? reject(err) : resolve(res);\n    });\n  } );\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/util/send-request.js\n **/","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('wpcom:batch');\n\n/**\n * Create a `Batch` instance\n *\n * @param {WPCOM} wpcom\n * @api public\n */\n\nfunction Batch(wpcom) {\n  if (!(this instanceof Batch)) {\n    return new Batch(wpcom);\n  }\n\n  this.wpcom = wpcom;\n\n  this.urls = [];\n}\n\n/**\n * Add url to batch requests\n *\n * @param {String} url\n * @api public\n */\n\nBatch.prototype.add = function (url) {\n  this.urls.push(url);\n  return this;\n};\n\n/**\n * Run the batch request\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nBatch.prototype.run = function (query={}, fn) {\n  if ('function' === typeof query) {\n    fn = query;\n    query = {};\n  }\n\n  // add urls to query object\n  query['urls'] = this.urls;\n\n  return this.wpcom.req.get('/batch', query, fn);\n};\n\n/**\n * Expose `Batch` module\n */\n\nmodule.exports = Batch;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/batch.js\n **/","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('wpcom:category');\n\n/**\n * Category methods\n *\n * @param {String} [slug]\n * @param {String} sid site id\n * @param {WPCOM} wpcom\n * @api public\n */\n\nfunction Category(slug, sid, wpcom) {\n  if (!sid) {\n    throw new Error('`site id` is not correctly defined');\n  }\n\n  if (!(this instanceof Category)) {\n    return new Category(slug, sid, wpcom);\n  }\n\n  this.wpcom = wpcom;\n  this._sid = sid;\n  this._slug = slug;\n}\n\n/**\n * Set category `slug`\n *\n * @param {String} slug\n * @api public\n */\n\nCategory.prototype.slug = function (slug) {\n  this._slug = slug;\n};\n\n/**\n * Get category\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nCategory.prototype.get = function (query, fn) {\n  var path = '/sites/' + this._sid + '/categories/slug:' + this._slug;\n  return this.wpcom.req.get(path, query, fn);\n};\n\n/**\n * Add category\n *\n * @param {Object} [query]\n * @param {Object} body\n * @param {Function} fn\n * @api public\n */\n\nCategory.prototype.add = function (query, body, fn) {\n  var path = '/sites/' + this._sid + '/categories/new';\n  return this.wpcom.req.post(path, query, body, fn);\n};\n\n/**\n * Edit category\n *\n * @param {Object} [query]\n * @param {Object} body\n * @param {Function} fn\n * @api public\n */\n\nCategory.prototype.update = function (query, body, fn) {\n  var path = '/sites/' + this._sid + '/categories/slug:' + this._slug;\n  return this.wpcom.req.put(path, query, body, fn);\n};\n\n/**\n * Delete category\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nCategory.prototype['delete'] = Category.prototype.del = function (query, fn) {\n  var path = '/sites/' + this._sid + '/categories/slug:' + this._slug + '/delete';\n  return this.wpcom.req.del(path, query, fn);\n};\n\n/**\n * Expose `Category` module\n */\n\nmodule.exports = Category;\n\n\n/** WEBPACK FOOTER **\n ** ./lib/category.js\n **/","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('wpcom:commentlike');\n\n/**\n * CommentLike methods\n *\n * @param {String} cid comment id\n * @param {String} sid site id\n * @param {WPCOM} wpcom\n * @api public\n */\n\nfunction CommentLike(cid, sid, wpcom) {\n  if (!sid) {\n    throw new Error('`site id` is not correctly defined');\n  }\n\n  if (!cid) {\n    throw new Error('`comment id` is not correctly defined');\n  }\n\n  if (!(this instanceof CommentLike)) {\n    return new CommentLike(cid, sid, wpcom);\n  }\n\n  this.wpcom = wpcom;\n  this._cid = cid;\n  this._sid = sid;\n}\n\n/**\n * Get your Like status for a Comment\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nCommentLike.prototype.mine =\nCommentLike.prototype.state = function (query, fn) {\n  var path = '/sites/' + this._sid + '/comments/' + this._cid + '/likes/mine';\n  return this.wpcom.req.get(path, query, fn);\n};\n\n/**\n * Like a comment\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nCommentLike.prototype.add = function (query, fn) {\n  var path = '/sites/' + this._sid + '/comments/' + this._cid + '/likes/new';\n  return this.wpcom.req.post(path, query, fn);\n};\n\n/**\n * Remove your Like from a Comment\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nCommentLike.prototype.del =\nCommentLike.prototype['delete'] = function (query, fn) {\n  var path = '/sites/' + this._sid + '/comments/' + this._cid + '/likes/mine/delete';\n  return this.wpcom.req.del(path, query, fn);\n};\n\n/**\n * Expose `CommentLike` module\n */\n\nmodule.exports = CommentLike;\n\n\n/** WEBPACK FOOTER **\n ** ./lib/commentlike.js\n **/","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('wpcom:follow');\n\n/**\n * Follow \n *\n * @param {String} site_id - site id\n * @param {WPCOM} wpcom\n * @api public\n */\n\nfunction Follow(site_id, wpcom) {\n  if (!site_id) {\n    throw new Error('`site id` is not correctly defined');\n  }\n\n  if (!(this instanceof Follow)) {\n    return new Follow(site_id, wpcom);\n  }\n\n  this.wpcom = wpcom;\n  this._sid = site_id;\n}\n\n/**\n * Get the follow status for current \n * user on current blog sites\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nFollow.prototype.mine =\nFollow.prototype.state = function (query, fn) {\n  var path = '/sites/' + this._sid + '/follows/mine';\n  return this.wpcom.req.get(path, query, fn);\n};\n\n/**\n * Follow the site\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nFollow.prototype.follow =\nFollow.prototype.add = function (query, fn) {\n  var path = '/sites/' + this._sid + '/follows/new';\n  return this.wpcom.req.put(path, query, null, fn);\n};\n\n/**\n * Unfollow the site\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nFollow.prototype.unfollow =\nFollow.prototype.del = function (query, fn) {\n  var path = '/sites/' + this._sid + '/follows/mine/delete';\n  return this.wpcom.req.del(path, query, null, fn);\n};\n\n/**\n * Expose `Follow` module\n */\n\nmodule.exports = Follow;\n\n\n/** WEBPACK FOOTER **\n ** ./lib/follow.js\n **/","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('wpcom:like');\n\n/**\n * Like methods\n *\n * @param {String} pid post id\n * @param {String} sid site id\n * @param {WPCOM} wpcom\n * @api public\n */\n\nfunction Like(pid, sid, wpcom) {\n  if (!sid) {\n    throw new Error('`site id` is not correctly defined');\n  }\n\n  if (!pid) {\n    throw new Error('`post id` is not correctly defined');\n  }\n\n  if (!(this instanceof Like)) {\n    return new Like(pid, sid, wpcom);\n  }\n\n  this.wpcom = wpcom;\n  this._pid = pid;\n  this._sid = sid;\n}\n\n/**\n * Get your Like status for a Post\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nLike.prototype.mine =\nLike.prototype.state = function (query, fn) {\n  var path = '/sites/' + this._sid + '/posts/' + this._pid + '/likes/mine';\n  return this.wpcom.req.get(path, query, fn);\n};\n\n/**\n * Like a post\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nLike.prototype.add = function (query, fn) {\n  var path = '/sites/' + this._sid + '/posts/' + this._pid + '/likes/new';\n  return this.wpcom.req.put(path, query, null, fn);\n};\n\n/**\n * Remove your Like from a Post\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nLike.prototype.del =\nLike.prototype['delete'] = function (query, fn) {\n  var path = '/sites/' + this._sid + '/posts/' + this._pid + '/likes/mine/delete';\n  return this.wpcom.req.del(path, query, fn);\n};\n\n/**\n * Expose `Like` module\n */\n\nmodule.exports = Like;\n\n\n/** WEBPACK FOOTER **\n ** ./lib/like.js\n **/","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('wpcom:me');\n\n/**\n * Create a `Me` instance\n *\n * @param {WPCOM} wpcom\n * @api public\n */\n\nfunction Me(wpcom) {\n  if (!(this instanceof Me)) {\n    return new Me(wpcom);\n  }\n\n  this.wpcom = wpcom;\n}\n\n/**\n * Meta data about auth token's User\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nMe.prototype.get = function (query, fn) {\n  return this.wpcom.req.get('/me', query, fn);\n};\n\n/**\n * A list of the current user's sites\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api private\n */\n\nMe.prototype.sites = function (query, fn) {\n  return this.wpcom.req.get('/me/sites', query, fn);\n};\n\n/**\n * List the currently authorized user's likes\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nMe.prototype.likes = function (query, fn) {\n  return this.wpcom.req.get('/me/likes', query, fn);\n};\n\n/**\n * A list of the current user's group\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nMe.prototype.groups = function (query, fn) {\n  return this.wpcom.req.get('/me/groups', query, fn);\n};\n\n/**\n * A list of the current user's connections to third-party services\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nMe.prototype.connections = function (query, fn) {\n  return this.wpcom.req.get('/me/connections', query, fn);\n};\n\n/**\n * Expose `Me` module\n */\n\nmodule.exports = Me;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/me.js\n **/","\n/**\n * Module dependencies.\n */\n\nvar fs = require('fs');\nvar debug = require('debug')('wpcom:media');\n\n/**\n * Default\n */\n\nvar def = {\n  \"apiVersion\": \"1.1\"\n};\n\n/**\n * Media methods\n *\n * @param {String} id\n * @param {String} sid site id\n * @param {WPCOM} wpcom\n * @api public\n */\n\nfunction Media(id, sid, wpcom) {\n  if (!(this instanceof Media)) {\n    return new Media(id, sid, wpcom);\n  }\n\n  this.wpcom = wpcom;\n  this._sid = sid;\n  this._id = id;\n\n  if (!this._id) {\n    debug('WARN: media `id` is not defined');\n  }\n}\n\n/**\n * Get media\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nMedia.prototype.get = function (query, fn) {\n  var path = '/sites/' + this._sid + '/media/' + this._id;\n  return this.wpcom.req.get(path, query, fn);\n};\n\n/**\n * Edit media\n *\n * @param {Object} [query]\n * @param {Object} body\n * @param {Function} fn\n * @api public\n */\n\nMedia.prototype.update = function (query, body, fn) {\n  var path = '/sites/' + this._sid + '/media/' + this._id;\n  return this.wpcom.req.put(path, query, body, fn);\n};\n\n/**\n * Add media file\n *\n * @param {Object} [query]\n * @param {String|Object|Array} files\n * @param {Function} fn\n */\n\nMedia.prototype.addFiles = function (query, files, fn) {\n  if ( undefined === fn ) {\n    if ( undefined === files ) {\n      files = query;\n      query = {};\n    } else if ( 'function' === typeof files ) {\n      fn = files;\n      files = query;\n      query = {};\n    }\n  }\n\n  var params = {\n    path: '/sites/' + this._sid + '/media/new',\n    formData: []\n  };\n\n  // process formData\n  files = Array.isArray(files) ? files : [files];\n\n  var i, f, isStream, isFile, k, param;\n  for (i = 0; i < files.length; i++) {\n    f = files[i];\n    f = 'string' === typeof f ? fs.createReadStream(f) : f;\n\n    isStream = !!f._readableState;\n    isFile = 'undefined' !== typeof File && f instanceof File;\n\n    debug('is stream: %s', isStream);\n    debug('is file: %s', isFile);\n\n    if (!isFile && !isStream) {\n      // process file attributes like as `title`, `description`, ...\n      for (k in f) {\n        debug('add %o => %o', k, f[k]);\n        if ('file' !== k) {\n          param = 'attrs[' + i + '][' + k + ']';\n          params.formData.push([param, f[k]]);\n        }\n      }\n      // set file path\n      f = f.file;\n      f = 'string' === typeof f ? fs.createReadStream(f) : f;\n    }\n\n    params.formData.push(['media[]', f]);\n  }\n\n  return this.wpcom.req.post(params, query, null, fn);\n};\n\n/**\n * Add media files from URL\n *\n * @param {Object} [query]\n * @param {String|Array|Object} files\n * @param {Function} fn\n */\n\nMedia.prototype.addUrls = function (query, media, fn) {\n  if ( undefined === fn ) {\n    if ( undefined === media ) {\n      media = query;\n      query = {};\n    } else if ( 'function' === typeof media ) {\n      fn = media;\n      media = query;\n      query = {};\n    }\n  }\n\n  var path = '/sites/' + this._sid + '/media/new';\n  var body = { media_urls: [] };\n\n  // process formData\n  var i, m, url, k;\n\n  media = Array.isArray(media) ? media : [ media ];\n  for (i = 0; i < media.length; i++) {\n    m = media[i];\n\n    if ('string' === typeof m) {\n      url = m;\n    } else {\n      if (!body.attrs) {\n        body.attrs = [];\n      }\n\n      // add attributes\n      body.attrs[i] = {};\n      for (k in m) {\n        if ('url' !== k) {\n          body.attrs[i][k] = m[k];\n        }\n      }\n      url = m[k];\n    }\n\n    // push url into [media_url]\n    body.media_urls.push(url);\n  }\n\n  return this.wpcom.req.post(path, query, body, fn);\n};\n\n/**\n * Delete media\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nMedia.prototype['delete'] = Media.prototype.del = function (query, fn) {\n  var path = '/sites/' + this._sid + '/media/' + this._id + '/delete';\n  return this.wpcom.req.del(path, query, fn);\n};\n\n/**\n * Expose `Media` module\n */\n\nmodule.exports = Media;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/media.js\n **/","\n/**\n * Module dependencies.\n */\n\nvar Like = require('./like');\nvar Reblog = require('./reblog');\nvar Comment = require('./comment');\nvar debug = require('debug')('wpcom:post');\n\n/**\n * Post methods\n *\n * @param {String} id\n * @param {String} sid site id\n * @param {WPCOM} wpcom\n * @api public\n */\n\nfunction Post(id, sid, wpcom) {\n  if (!(this instanceof Post)) {\n    return new Post(id, sid, wpcom);\n  }\n\n  this.wpcom = wpcom;\n  this._sid = sid;\n\n  // set `id` and/or `slug` properties\n  id = id || {};\n  if ('object' !== typeof id) {\n    this._id = id;\n  } else {\n    this._id = id.id;\n    this._slug = id.slug;\n  }\n}\n\n/**\n * Set post `id`\n *\n * @param {String} id\n * @api public\n */\n\nPost.prototype.id = function (id) {\n  this._id = id;\n};\n\n/**\n * Set post `slug`\n *\n * @param {String} slug\n * @api public\n */\n\nPost.prototype.slug = function (slug) {\n  this._slug = slug;\n};\n\n/**\n * Get post\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nPost.prototype.get = function (query, fn) {\n  if (!this._id && this._slug) {\n    return this.getBySlug(query, fn);\n  }\n\n  var path = '/sites/' + this._sid + '/posts/' + this._id;\n  return this.wpcom.req.get(path, query, fn);\n};\n\n/**\n * Get post by slug\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nPost.prototype.getBySlug = function (query, fn) {\n  var path = '/sites/' + this._sid + '/posts/slug:' + this._slug;\n  return this.wpcom.req.get(path, query, fn);\n};\n\n/**\n * Add post\n *\n * @param {Object} [query]\n * @param {Object} body\n * @param {Function} fn\n * @api public\n */\n\nPost.prototype.add = function (query, body, fn) {\n  if ( undefined === fn ) {\n    if ( undefined === body ) {\n      body = query;\n      query = {};\n    } else if ( 'function' === typeof body ) {\n      fn = body;\n      body = query;\n      query = {};\n    }\n  }\n\n  var path = '/sites/' + this._sid + '/posts/new';\n\n  return this.wpcom.req.post(path, query, body)\n    .then(data => {\n      // update POST object\n      this._id = data.ID;\n      debug('Set post _id: %s', this._id);\n\n      this._slug = data.slug;\n      debug('Set post _slug: %s', this._slug);\n\n      if ( 'function' === typeof fn ) {\n        fn(null, data);\n      } else {\n        return Promise.resolve( data );\n      }\n    })\n    .catch(err => {\n      if ( 'function' === typeof fn ) {\n        fn(err);\n      } else {\n        return Promise.reject( error );\n      }\n    });\n};\n\n/**\n * Edit post\n *\n * @param {Object} [query]\n * @param {Object} body\n * @param {Function} fn\n * @api public\n */\n\nPost.prototype.update = function (query, body, fn) {\n  var path = '/sites/' + this._sid + '/posts/' + this._id;\n  return this.wpcom.req.put(path, query, body, fn);\n};\n\n/**\n * Delete post\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nPost.prototype.del =\nPost.prototype['delete'] = function (query, fn) {\n  var path = '/sites/' + this._sid + '/posts/' + this._id + '/delete';\n  return this.wpcom.req.del(path, query, fn);\n};\n\n/**\n * Restore post\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nPost.prototype.restore = function (query, fn) {\n  var path = '/sites/' + this._sid + '/posts/' + this._id + '/restore';\n  return this.wpcom.req.put(path, query, null, fn);\n};\n\n/**\n * Get post likes list\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nPost.prototype.likesList = function (query, fn) {\n  var path = '/sites/' + this._sid + '/posts/' + this._id + '/likes';\n  return this.wpcom.req.get(path, query, fn);\n};\n\n/**\n * Search within a site for related posts\n *\n * @param {Object} body\n * @param {Function} fn\n * @api public\n */\n\nPost.prototype.related = function (body, fn) {\n  var path = '/sites/' + this._sid + '/posts/' + this._id + '/related';\n  return this.wpcom.req.put(path, body, null, fn);\n};\n\n/**\n * Create a `Like` instance\n *\n * @api public\n */\n\nPost.prototype.like = function () {\n  return new Like(this._id, this._sid, this.wpcom);\n};\n\n/**\n * Create a `Reblog` instance\n *\n * @api public\n */\n\nPost.prototype.reblog = function () {\n  return new Reblog(this._id, this._sid, this.wpcom);\n};\n\n/**\n * Create a `Comment` instance\n *\n * @param {String} [cid] comment id\n * @api public\n */\n\nPost.prototype.comment = function (cid) {\n  return new Comment(cid, this._id, this._sid, this.wpcom);\n};\n\n/**\n * Return recent comments\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nPost.prototype.comments = function (query, fn) {\n  var comment = new Comment(null, this._id, this._sid, this.wpcom);\n  return comment.replies(query, fn);\n};\n\n/**\n * Expose `Post` module\n */\n\nmodule.exports = Post;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/post.js\n **/","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('wpcom:reblog');\n\n/**\n * Reblog methods\n *\n * @param {String} pid post id\n * @param {String} sid site id\n * @param {WPCOM} wpcom\n * @api public\n */\n\nfunction Reblog(pid, sid, wpcom) {\n  if (!sid) {\n    throw new Error('`site id` is not correctly defined');\n  }\n\n  if (!pid) {\n    throw new Error('`post id` is not correctly defined');\n  }\n\n  if (!(this instanceof Reblog)) {\n    return new Reblog(pid, sid, wpcom);\n  }\n\n  this.wpcom = wpcom;\n  this._pid = pid;\n  this._sid = sid;\n}\n\n/**\n * Get your reblog status for a Post\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nReblog.prototype.mine =\nReblog.prototype.state = function (query, fn) {\n  var path = '/sites/' + this._sid + '/posts/' + this._pid + '/reblogs/mine';\n  return this.wpcom.req.get(path, query, fn);\n};\n\n/**\n * Reblog a post\n *\n * @param {Object} [query]\n * @param {Object} body\n * @param {Function} fn\n * @api public\n */\n\nReblog.prototype.add = function (query, body, fn) {\n  if ('function' === typeof body) {\n    fn = body;\n    body = query;\n    query = {};\n  }\n\n  if (body && !body.destination_site_id) {\n    return fn(new Error('destination_site_id is not defined'));\n  }\n\n  var path = '/sites/' + this._sid + '/posts/' + this._pid + '/reblogs/new';\n  return this.wpcom.req.put(path, query, body, fn);\n};\n\n/**\n * Reblog a post to\n * It's almost an alias of Reblogs#add\n *\n * @param {Number|String} dest site id destination\n * @param {String} [note]\n * @param {Function} fn\n * @api public\n */\n\nReblog.prototype.to = function (dest, note, fn) {\n  if ( undefined === fn ) {\n    if ( undefined === note ) {\n      note = null;\n    } else if ('function' === typeof note) {\n      fn = note;\n      note = null;\n    }\n  }\n\n  return this.add({ note: note, destination_site_id: dest }, fn);\n};\n\n/**\n * Expose `Reblog` module\n */\n\nmodule.exports = Reblog;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/reblog.js\n **/","\n/**\n * Module dependencies.\n */\n\nvar Post = require('./post');\nvar Category = require('./category');\nvar Tag = require('./tag');\nvar Media = require('./media');\nvar Comment = require('./comment');\nvar Follow = require('./follow');\nvar debug = require('debug')('wpcom:site');\n\n/**\n * Resources array\n * A list of endpoints with the same structure\n */\n\nvar resources = [\n  'categories',\n  'comments',\n  'follows',\n  'media',\n  'posts',\n  'shortcodes',\n  'embeds',\n  [ 'pageTemplates', 'page-templates' ],\n  [ 'stats', 'stats' ],\n  [ 'statsClicks', 'stats/clicks' ],\n  [ 'statsComments', 'stats/comments' ],\n  [ 'statsCommentFollowers', 'stats/comment-followers' ],\n  [ 'statsCountryViews', 'stats/country-views' ],\n  [ 'statsFollowers', 'stats/followers' ],\n  [ 'statsPublicize', 'stats/publicize' ],\n  [ 'statsReferrers', 'stats/referrers' ],\n  [ 'statsSearchTerms', 'stats/search-terms' ],\n  [ 'statsStreak', 'stats/streak' ],\n  [ 'statsSummary', 'stats/summary' ],\n  [ 'statsTags', 'stats/tags' ],\n  [ 'statsTopAuthors', 'stats/top-authors' ],\n  [ 'statsTopPosts', 'stats/top-posts' ],\n  [ 'statsVideoPlays', 'stats/video-plays' ],\n  [ 'statsVisits', 'stats/visits' ],\n  'tags',\n  'users'\n];\n\n/**\n * Create a Site instance\n *\n * @param {WPCOM} wpcom\n * @api public\n */\n\nfunction Site(id, wpcom) {\n  if (!(this instanceof Site)) {\n    return new Site(id, wpcom);\n  }\n\n  this.wpcom = wpcom;\n\n  debug('set %o site id', id);\n  this._id = encodeURIComponent(id);\n}\n\n/**\n * Require site information\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nSite.prototype.get = function (query, fn) {\n  return this.wpcom.req.get('/sites/' + this._id, query, fn);\n};\n\n/**\n * List method builder\n *\n * @param {String} subpath\n * @param {Function}\n * @api private\n */\n\nfunction list(subpath) {\n\n  /**\n   * Create and return the <names>List method\n   *\n   * @param {Object} [query]\n   * @param {Function} fn\n   * @api public\n   */\n\n  var listMethod = function (query, fn) {\n    var path = '/sites/' + this._id + '/' + subpath;\n    return this.wpcom.req.get(path, query, fn);\n  };\n  listMethod._publicAPI = true;\n  return listMethod;\n}\n\n// walk for each resource and create related method\nvar i, res, isarr, name, subpath;\nfor (i = 0; i < resources.length; i++) {\n  res = resources[i];\n  isarr = Array.isArray(res);\n\n  name =  isarr ? res[0] : res + 'List';\n  subpath = isarr ? res[1] : res;\n\n  debug('adding method: %o - sub-path: %o - version: %s', ('site.' + name + '()'), subpath);\n  Site.prototype[name] = list(subpath);\n}\n\n/**\n * :POST:\n * Create a `Post` instance\n *\n * @param {String} id\n * @api public\n */\n\nSite.prototype.post = function (id) {\n  return new Post(id, this._id, this.wpcom);\n};\n\n/**\n * :POST:\n * Add a new blog post\n *\n * @param {Object} body\n * @param {Function} fn\n * @return {Post} new Post instance\n */\n\nSite.prototype.addPost = function (body, fn) {\n  var post = new Post(null, this._id, this.wpcom);\n  return post.add(body, fn);\n};\n\n/**\n * :POST:\n * Delete a blog post\n *\n * @param {String} id\n * @param {Function} fn\n * @return {Post} remove Post instance\n */\n\nSite.prototype.deletePost = function (id, fn) {\n  var post = new Post(id, this._id, this.wpcom);\n  return post.delete(fn);\n};\n\n/**\n * Create a `Media` instance\n *\n * @param {String} id\n * @api public\n */\n\nSite.prototype.media = function (id) {\n  return new Media(id, this._id, this.wpcom);\n};\n\n/**\n * Add a media from a file\n *\n * @param {Object} [query]\n * @param {Array|String} files\n * @param {Function} fn\n * @return {Post} new Post instance\n */\n\nSite.prototype.addMediaFiles = function (query, files, fn) {\n  var media = new Media(null, this._id, this.wpcom);\n  return media.addFiles(query, files, fn);\n};\n\n/**\n * Add a new media from url\n *\n * @param {Object} [query]\n * @param {Array|String} files\n * @param {Function} fn\n * @return {Post} new Post instance\n */\n\nSite.prototype.addMediaUrls = function (query, files, fn) {\n  var media = new Media(null, this._id, this.wpcom);\n  return media.addUrls(query, files, fn);\n};\n\n/**\n * Delete a blog media\n *\n * @param {String} id\n * @param {Function} fn\n * @return {Post} removed Media instance\n */\n\nSite.prototype.deleteMedia = function (id, fn) {\n  var media = new Media(id, this._id, this.wpcom);\n  return media.del(fn);\n};\n\n/**\n * Create a `Comment` instance\n *\n * @param {String} id\n * @api public\n */\n\nSite.prototype.comment = function (id) {\n  return new Comment(id, null, this._id, this.wpcom);\n};\n\n/**\n * Create a `Follow` instance\n *\n * @api public\n */\n\nSite.prototype.follow = function () {\n  return new Follow(this._id, this.wpcom);\n};\n\n/**\n * Create a `Category` instance\n * Set `cat` alias\n *\n * @param {String} [slug]\n * @api public\n */\n\nSite.prototype.cat = Site.prototype.category = function (slug) {\n  return new Category(slug, this._id, this.wpcom);\n};\n\n/**\n * Create a `Tag` instance\n *\n * @param {String} [slug]\n * @api public\n */\n\nSite.prototype.tag = function (slug) {\n  return new Tag(slug, this._id, this.wpcom);\n};\n\n/**\n * Get a rendered shortcode for a site.\n *\n * Note: The current user must have publishing access.\n *\n * @param {String} url\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nSite.prototype.renderShortcode = function (url, query, fn) {\n  if ('string' !== typeof url) {\n    throw new TypeError('expected a url String');\n  }\n\n  if ('function' == typeof query) {\n    fn = query;\n    query = {};\n  }\n\n  query = query || {};\n  query.shortcode = url;\n\n  var path = '/sites/' + this._id + '/shortcodes/render';\n\n  return this.wpcom.req.get(path, query, fn);\n};\n\n/**\n * Get a rendered embed for a site.\n *\n * Note: The current user must have publishing access.\n *\n * @param {String} url\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nSite.prototype.renderEmbed = function (url, query, fn) {\n  if ('string' !== typeof url) {\n    throw new TypeError('expected an embed String');\n  }\n\n  if ('function' == typeof query) {\n    fn = query;\n    query = {};\n  }\n\n  query = query || {};\n  query.embed_url = url;\n\n  var path = '/sites/' + this._id + '/embeds/render';\n  return this.wpcom.req.get(path, query, fn);\n};\n\n/**\n * Mark a referrering domain as spam\n *\n * @param {String} domain\n * @param {Function} fn\n * @api public\n */\n\nSite.prototype.statsReferrersSpamNew = function (domain, fn) {\n  var path = '/sites/' + this._id + '/stats/referrers/spam/new';\n  var body = { domain: domain };\n\n  return this.wpcom.req.post(path, body, null, fn);\n};\n\n/**\n * Remove referrering domain from spam\n *\n * @param {String} domain\n * @param {Function} fn\n * @api public\n */\n\nSite.prototype.statsReferrersSpamDelete = function (domain, fn) {\n  var path = '/sites/' + this._id + '/stats/referrers/spam/delete';\n  var body = { domain: domain };\n\n  return this.wpcom.req.post(path, body, null, fn);\n};\n\n/**\n * Get detailed stats about a VideoPress video\n *\n * @param {String} videoId\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nSite.prototype.statsVideo = function (videoId, query, fn) {\n  var path = '/sites/' + this._id + '/stats/video/' + videoId;\n\n  if ('function' == typeof query) {\n    fn = query;\n    query = {};\n  }\n\n  return this.wpcom.req.get(path, query, fn);\n};\n\n/**\n * Get detailed stats about a particular post\n *\n * @param {String} postId\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nSite.prototype.statsPostViews = function (postId, query, fn) {\n  var path = '/sites/' + this._id + '/stats/post/' + postId;\n\n  if ('function' == typeof query) {\n    fn = query;\n    query = {};\n  }\n\n  return this.wpcom.req.get(path, query, fn);\n};\n\n/**\n * Expose `Site` module\n */\n\nmodule.exports = Site;\n\n\n/** WEBPACK FOOTER **\n ** ./lib/site.js\n **/","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('wpcom:tag');\n\n/**\n * Tag methods\n *\n * @param {String} [slug]\n * @param {String} sid site id\n * @param {WPCOM} wpcom\n * @api public\n */\n\nfunction Tag(slug, sid, wpcom) {\n  if (!sid) {\n    throw new Error('`site id` is not correctly defined');\n  }\n\n  if (!(this instanceof Tag)) {\n    return new Tag(slug, sid, wpcom);\n  }\n\n  this.wpcom = wpcom;\n  this._sid = sid;\n  this._slug = slug;\n}\n\n/**\n * Set tag `slug`\n *\n * @param {String} slug\n * @api public\n */\n\nTag.prototype.slug = function (slug) {\n  this._slug = slug;\n};\n\n/**\n * Get tag\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nTag.prototype.get = function (query, fn) {\n  var path = '/sites/' + this._sid + '/tags/slug:' + this._slug;\n  return this.wpcom.req.get(path, query, fn);\n};\n\n/**\n * Add tag\n *\n * @param {Object} [query]\n * @param {Object} body\n * @param {Function} fn\n * @api public\n */\n\nTag.prototype.add = function (query, body, fn) {\n  var path = '/sites/' + this._sid + '/tags/new';\n  return this.wpcom.req.post(path, query, body, fn);\n};\n\n/**\n * Edit tag\n *\n * @param {Object} [query]\n * @param {Object} body\n * @param {Function} fn\n * @api public\n */\n\nTag.prototype.update = function (query, body, fn) {\n  var path = '/sites/' + this._sid + '/tags/slug:' + this._slug;\n  return this.wpcom.req.put(path, query, body, fn);\n};\n\n/**\n * Delete tag\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nTag.prototype['delete'] = Tag.prototype.del = function (query, fn) {\n  var path = '/sites/' + this._sid + '/tags/slug:' + this._slug + '/delete';\n  return this.wpcom.req.del(path, query, fn);\n};\n\n/**\n * Expose `Tag` module\n */\n\nmodule.exports = Tag;\n\n\n/** WEBPACK FOOTER **\n ** ./lib/tag.js\n **/","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('wpcom:users');\n\n/**\n * Create a `Users` instance\n *\n * @param {WPCOM} wpcom\n * @api public\n */\n\nfunction Users(wpcom) {\n  if (!(this instanceof Users)) {\n    return new Users(wpcom);\n  }\n\n  this.wpcom = wpcom;\n}\n\n/**\n * A list of @mention suggestions for the current user\n *\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nUsers.prototype.suggest = function (query, fn) {\n  return this.wpcom.req.get('/users/suggest', query, fn);\n};\n\n/**\n * Expose `Users` module\n */\n\nmodule.exports = Users;\n\n\n/** WEBPACK FOOTER **\n ** ./lib/users.js\n **/","\n/**\n * Module dependencies.\n */\n\nvar sendRequest = require('./send-request');\nvar debug = require('debug')('wpcom:request');\n\n/**\n * Expose `Request` module\n */\n\n\nfunction Req(wpcom) {\n  this.wpcom = wpcom;\n}\n\n/**\n * Request methods\n *\n * @param {Object|String} params\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nReq.prototype.get = function (params, query, fn) {\n  // `query` is optional\n  if ('function' == typeof query) {\n    fn = query;\n    query = {};\n  }\n\n  return sendRequest.call(this.wpcom, params, query, null, fn);\n};\n\n/**\n * Make `update` request\n *\n * @param {Object|String} params\n * @param {Object} [query]\n * @param {Object} body\n * @param {Function} fn\n * @api public\n */\n\nReq.prototype.post =\nReq.prototype.put = function (params, query, body, fn) {\n  if (undefined === fn) {\n    if (undefined === body) {\n      body = query;\n      query = {}\n    } else if ( 'function' === typeof body) {\n      fn = body;\n      body = query;\n      query = {};\n    }\n  }\n\n  // params can be a string\n  params = 'string' === typeof params ? { path : params } : params;\n\n  // request method\n  params.method = 'post';\n\n  return sendRequest.call(this.wpcom, params, query, body, fn);\n};\n\n/**\n * Make a `delete` request\n *\n * @param {Object|String} params\n * @param {Object} [query]\n * @param {Function} fn\n * @api public\n */\n\nReq.prototype.del = function (params, query, fn) {\n  if ('function' == typeof query) {\n    fn = query;\n    query = {};\n  }\n\n  return this.post(params, query, null, fn);\n};\n\n/**\n * Expose module\n */\n\nmodule.exports = Req;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/util/request.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_17__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"fs\"\n ** module id = 17\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_18__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"qs\"\n ** module id = 18\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_19__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"wpcom-xhr-request\"\n ** module id = 19\n ** module chunks = 0\n **/"],"sourceRoot":""}